import express from "express"; // üé∫ Llamamos a Express (la librer√≠a que maneja las rutas y el servidor)
import dotenv from "dotenv";  // üß© Sirve para leer el archivo .env (donde guardamos claves secretas)
import cors from "cors";  //üõ°Ô∏è Permite que otras apps (como el frontend) hablen con este servidor
import brigadasRoutes from "./src/routes/brigadas.js"; // üëà importante: ruta de brigadas // üß≠ Traemos las rutas de brigadas

dotenv.config();   // üì¶ Activa las variables secretas (como SUPABASE_URL, PORT, etc.)  

const app = express();   // üöÄ Crea la app de Express  // üé¨ Creamos nuestra aplicaci√≥n Express
app.use(cors());   //üõ°Ô∏è Habilita CORS para todas las rutas  // üîì Permitimos peticiones desde fuera
app.use(express.json());

// Ruta de prueba
app.get("/", (req, res) => {
  res.json({ message: "Brigada Service funcionando üöÄ" });
});

// Rutas principales del microservicio
app.use("/api/brigadas", brigadasRoutes);
// üó∫Ô∏è Si alguien entra a http://localhost:5000/api/brigadas ‚Üí ir√° al archivo brigadas.js

// Puerto de escucha O ENCENDEMOS EL SERVIDOR
const PORT = process.env.PORT || 5000;
app.listen(PORT, () => {
  console.log(`‚úÖ Brigada Service corriendo en http://localhost:${PORT}`);
});
// Nota: Aseg√∫rate de tener las variables de entorno configuradas en un archivo .env
// SUPABASE_URL y SUPABASE_KEY para la conexi√≥n a Supabase.